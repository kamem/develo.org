@charset "utf-8";

/*----------------------------------------
	data
----------------------------------------*/
.data {
	$font-size: 13;
	$line-height: $font-size;
	$padding: 5;
	$fix-height: $font-size + $padding * 2;

	margin: 0 auto;
	max-width: es($base-width);
	padding: 0 es(($base-width-big - $base-width) / 2);
	overflow: hidden;
	
	background: rgba(255,255,255,0.8);
	#{"/"}background: #fff;
	background/*\**/: #fff \9;

	@include border-radius(0 0 4px 4px);
	@include box-shadow(1px 1px 2px rgba(0,0,0,0.05));
	
	li {
		padding: es($padding) 0;
		margin-right: es($font-size);
		line-height: es($line-height) !important;
		@include fz($font-size);

		float: left;
		color: #666;

		&.category {
			a {
				&:hover {
					position: relative;
				}
			}
		}
		&.name {
			display: none;
		}
	}
	
	.tag {
		a {
			$font-size: 13;
			$line-height: $font-size;
			$padding: 2;
			$border: 1;
			$fix-height: $line-height + $padding * 2 + $border * 2;
			$triangle-size: 6;
	
			margin-left: es($triangle-size);
			@include fz($font-size);
			line-height: es($font-size);
					
			padding: es($padding) es(5);
			border: $border + px #fff,0.7;
			text-decoration: none;
			
			background: #fff;
			position: relative;

			@include border-radius(0 2px 2px 0);
			@include triangle-set(es($fix-height) es($triangle-size),#fff,left);
			
			@include box-shadow(1px1px 1px rgba(0,0,0,0.2));

			&:hover {
				@include rotate(3deg);
			}
		}
	}

	@media screen and (max-width: es($mediaQuery-middle,rem,$mediaQuery-baseSize)) {
		padding: 0 es(10);
	}
	
	@media screen and (max-width: es($mediaQuery-small,rem,$mediaQuery-baseSize)) {
		margin: 0 auto;
		font-size: fz(11);
		max-width: es(736);
		padding: 0 es(10) !important;
		
		li {
			padding: es(5) 0 es(5) 0;
		}
	}
}

a {
	&.htmlcss,
	&.javascript,
	&.artworks,
	&.design,
	&.diary {
		padding: es(2) es(5);
		color: #fff;
		text-decoration: none;
		@include border-radius(2px);
		@include box-shadow(1px 1px 0 rgba(0,0,0,0.2));

		&:hover {
			position: relative;
			@include opacity(0.6);
		}
		
		&:active {
			top: 1px;
			left: 1px;
			@include box-shadow(none);
			@include transition(none !important);
		}
	}
	
	$i: 0;
	@each $category in $categories {
		$i: $i + 1;
		#{"&." + $category} {
			background: nth($category-colors,$i);
		}
	}
}